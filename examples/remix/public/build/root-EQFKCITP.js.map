{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport { type LinksFunction } from '@remix-run/node';\nimport * as DS from '@tokenami/example-design-system';\nimport styles from '~/../public/tokenami.css';\nimport { css } from '~/css';\n\nexport const links: LinksFunction = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default function App() {\n  const [theme, setTheme] = React.useState<'light' | 'dark'>('light');\n  return (\n    <html lang=\"en\" style={css({ '--height': 'var(--size_full)' })}>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body\n        data-theme={theme}\n        style={css({\n          '--min-height': 'var(--size_full)',\n          '---radial-gradient': 'radial-gradient(circle, #000000 1px, rgba(0, 0, 0, 0) 1px)',\n          '---grid-bg-size': 'calc(var(--_grid) * 5)',\n          '--background-size': 'var(---,var(---grid-bg-size) var(---grid-bg-size))',\n          '--background-image': 'var(---,var(---radial-gradient))',\n          '--background-color': 'var(--color_indigo6)',\n          '--background-position-x': 1,\n          '--background-position-y': 0.5,\n          '--display': 'flex',\n          '--flex-direction': 'column',\n          '--align-items': 'center',\n          '--justify-content': 'center',\n          '--child-p_background-color': 'var(--color_indigo5)',\n          '--child-p_border-radius': 'var(--radii_sm)',\n          '--child-p_px': 2\n        })}>\n\n        <DS.Button onClick={() => setTheme((theme) => theme === 'light' ? 'dark' : 'light')}>\n          Switch theme\n        </DS.Button>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,YAAuB;;;;;;AAcf;AAPD,IAAM,QAAuB,MAAM,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAO,CAAC;AAE/D,SAAR,MAAuB;AAC5B,QAAM,CAAC,OAAO,QAAQ,IAAU,eAA2B,OAAO;AAClE,SACE,mDAAC,UAAK,MAAK,MAAK,OAAO,IAAI,EAAE,YAAY,mBAAmB,CAAC,GAC3D;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,cAAY;AAAA,QACZ,OAAO,IAAI;AAAA,UACT,gBAAgB;AAAA,UAChB,sBAAsB;AAAA,UACtB,mBAAmB;AAAA,UACnB,qBAAqB;AAAA,UACrB,sBAAsB;AAAA,UACtB,sBAAsB;AAAA,UACtB,2BAA2B;AAAA,UAC3B,2BAA2B;AAAA,UAC3B,aAAa;AAAA,UACb,oBAAoB;AAAA,UACpB,iBAAiB;AAAA,UACjB,qBAAqB;AAAA,UACrB,8BAA8B;AAAA,UAC9B,2BAA2B;AAAA,UAC3B,gBAAgB;AAAA,QAClB,CAAC;AAAA,QAED;AAAA,6DAAI,QAAH,EAAU,SAAS,MAAM,SAAS,CAACA,WAAUA,WAAU,UAAU,SAAS,OAAO,GAAG,4BAArF;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBAAQ;AAAA,UACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,iBAAS;AAAA,UACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA;AAAA;AAAA,MA1Bd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BA;AAAA,OAlCF;AAAA;AAAA;AAAA;AAAA,SAmCA;AAEJ;",
  "names": ["theme"]
}
